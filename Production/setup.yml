---
- hosts: all
  become: true
  vars_files:
    -  vars/default.yml

  tasks: 
    - name: Make sure we have a '{{ mongodb_group }}' group
      group:
        name: "{{ mongodb_group }}"
        state: present

    - name: Allow '{{ mongodb_group }}' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%{{ mongodb_group }}'
        line: '%{{ mongodb_group }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Add sudoers users to {{ mongodb_group }} group
      user: name={{ mongodb_user }} groups={{ mongodb_group }} append=yes state=present createhome=yes

    - name: Set up authorized keys for the deployer user
      authorized_key: user={{ mongodb_user }} key="{{item}}"
      with_file:
        - /home/{{ ansible_user }}/.ssh/id_rsa.pub

    #- debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']
    #- name: Set authorized key taken from file
      #authorized_key:
        #user: {{ ansible_user }}
        #state: present
        #key: "{{ lookup('file', '/home/{{ ansible_user }}/.ssh/id_rsa.pub') }}"

    - name: Install required packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: ['aptitude','apt-transport-https','ca-certificates','curl','software-properties-common','python3-pip','virtualenv','python3-setuptools','mongodb-clients']
    
    - name: Update ssl database
      become: true
      command: update-ca-certificates
      
    - name: Add Docker GPG apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository for {{ ubuntu_version }}
      apt_repository:
        repo: deb https://download.docker.com/linux/{{ ubuntu_version }} stable
        state: present
   
    - name: Install docker module for python
      pip:
        name: docker
        
    - name: Open ports ufw
      become: true 
      ufw: 
        rule: allow 
        port: "{{ item }}"
        proto: tcp
      with_items: 
        - ssh
        - domain
        - 27017
        - 27018
        - 27019  
        - 27020
        
    - name: Enable ufw
      become: true
      ufw: 
        state: enabled
        policy: deny

    - name: Ensure {{ mongodb_dir }}hostname exist
      file:
        name: '{{ mongodb_dir }}{{ ansible_hostname }}'
        state: directory

    - name: Ensure {{ mongodb_dir }}hostname/secret exist
      file:
        name: '{{ mongodb_dir }}{{ ansible_hostname }}/secret'
        state: directory

    - name: Copy secret file {{ mongodb_dir }}hostname/secret
      copy:
        src: pubkey
        dest: '{{ mongodb_dir }}{{ ansible_hostname }}/secret/pubkey'
        owner: root
        mode: 0400
        