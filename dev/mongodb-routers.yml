---
- hosts: routers
  remote_user: root
  become: true
  vars_files:
    -  vars/default.yml
 
  tasks:
    - name: Run mongodb container
      docker_container:
        name: '{{ mongodb_router_container_name }}'
        image: 'docker.io/mongo:{{ mongodb_docker_image_tag }}'
        restart_policy: always
        state: started
        volumes: 
          - '{{ mongodb_dir_router }}:/data/db' 
    
    - name: Install the admin script
      become: true
      template:
        src: "templates/create-admin-router.sh.j2"
        dest: "/root/create-admin-router.sh"
        owner: root
        group: root
        mode: 700

    #- name: Run the add user script
      #become: true
      #command: sh /root/create-admin-router.sh

    - name: Remove mongodb container
      docker_container:
        name: '{{ mongodb_router_container_name }}'
        image: 'docker.io/mongo:{{ mongodb_docker_image_tag }}'
        restart_policy: always
        state: absent

    - name: Run mongodb container
      docker_container:
        name: '{{ mongodb_router_container_name }}'
        image: 'docker.io/mongo:{{ mongodb_docker_image_tag }}'
        command: "mongos --configdb {{ replica_set_name }}/node1:27017,node2:27017 --port {{ mongodb_router_port }} --keyFile {{ mongodb_dir_router }}/secret --bind_ip 127.0.0.1"
        restart_policy: always
        state: started
        exposed_ports: 27017
        etc_hosts: >
          {      
            "{{ host1 }}": "{{ node1 }}",
            "{{ host2 }}": "{{ node2 }}",
            "{{ host3 }}": "{{ node3 }}"
          }
        ports:
          - "{{ mongodb_router_port }}:{{ mongodb_router_port }}"
        volumes: 
          - '{{ mongodb_dir_router }}:/data/db' 
          - '/etc/localtime:/etc/localtime:ro'
          - '{{ mongodb_dir_router }}/secret:{{ mongodb_dir_router }}/secret'


     


    
